diff --git a/node_modules/gatsby-theme-i18n/gatsby-node.js b/node_modules/gatsby-theme-i18n/gatsby-node.js
index 5e01d30..9e67888 100644
--- a/node_modules/gatsby-theme-i18n/gatsby-node.js
+++ b/node_modules/gatsby-theme-i18n/gatsby-node.js
@@ -123,14 +123,29 @@ exports.onCreateNode = ({ node, actions }, themeOptions) => {
   const { defaultLang } = withDefaults(themeOptions)
 
   if (node.internal.type === `Mdx`) {
-    const name = path.basename(node.fileAbsolutePath, `.mdx`)
+    // const name = path.basename(node.fileAbsolutePath ?? node.internal.contentFilePath, `.mdx`)
 
-    const isDefault = name === `index`
+    // const isDefault = name === `index`
 
-    const lang = isDefault ? defaultLang : name.split(`.`)[1]
+    // const lang = isDefault ? defaultLang : name.split(`.`)[1]
 
-    createNodeField({ node, name: `locale`, value: lang })
-    createNodeField({ node, name: `isDefault`, value: isDefault })
+    // createNodeField({ node, name: `locale`, value: lang })
+    // createNodeField({ node, name: `isDefault`, value: isDefault })
+
+    const match = node.internal.contentFilePath?.match(/\/content\/(\w{2})\/.+\.mdx?/);
+
+    let lang = defaultLang;
+
+    if (match != null) {
+      lang = match[1];
+    }
+
+    createNodeField({ node, name: `locale`, value: lang });
+    createNodeField({
+      node,
+      name: `isDefault`,
+      value: lang == defaultLang,
+    });
   }
 }
 
@@ -180,6 +195,9 @@ exports.onCreatePage = ({ page, actions }, themeOptions) => {
         originalPath,
         dateFormat: locale.dateFormat,
       },
+      slices: {
+        "content-mdx": `content-mdx-${page.context.slug}-${locale.code}`,
+      },
     }
 
     // Check if the page is a localized 404
