name: Deploy

on:
  push:
    branches:
      - dev
      - production
      - tsotne/wip

jobs:
  build_and_deploy:
    name: Build and Deploy
    environment: "dev-deploy"
    env:
      GITHUB_REF_NAME: ${{ github.ref_name }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    permissions:
      contents: read
      deployments: write
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            .eslintcache
            **/tsconfig.tsbuildinfo
            **/.types/**
            **/.types-*/**
          key: build-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            build-cache-

      - name: Install dependencies
        run: yarn

      - name: Update Algolia search index
        run: |
          export ALGOLIA_INDEX=${GITHUB_REF_NAME/\//-}
          yarn workspace @starknet-io/cms-scripts update-algolia-index

        env:
          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
          ALGOLIA_SEARCH_API_KEY: ${{ secrets.ALGOLIA_SEARCH_API_KEY }}
          ALGOLIA_WRITE_API_KEY: ${{ secrets.ALGOLIA_WRITE_API_KEY }}

      - name: Build storybook
        run: yarn storybook build

      - name: Deploy storybook
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: starknet-storybook
          directory: storybook-static
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Update dynamic data
        run: yarn workspace @starknet-io/cms-scripts update-dynamic-data

      - name: Build project
        run: yarn next build

      # there are issues with file upload limits on vercel
      # so deploy is disabled here and is done from vercel for now
      # - name: Prepare Vercel environment
      #   run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      # - name: Build project
      #   run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      # - name: Deploy prebuilt project to Vercel
      #   id: vercel-deploy
      #   run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} >> $GITHUB_OUTPUT

      # - name: Assign a custom domain to a Vercel preview deployment
      #   run: |
      #     export REF_NAME=${GITHUB_REF_NAME/\//-}
      #     vercel alias set ${{ steps.vercel-deploy.outputs }} starknet-website-${REF_NAME}.yukilabs.xyz\
      #       --token=${{ secrets.VERCEL_TOKEN }}\
      #       --scope yuki-labs
