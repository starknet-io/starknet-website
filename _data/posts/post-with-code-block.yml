id: 28b6d5cf-eb60-4735-8824-a1877bcedff7
post_type: article
title: Post with code block
published_date: 2023-07-05T17:24:27.287Z
category: engineering
topic:
  - open_source
short_desc: Here is a short desc
blocks:
  - type: code
    language: javascript
    body:
      lang: javascript
      code: |-
        function add(num1, num2){
          // here a little comment
          return num1 + num2
        }
  - type: code
    language: python
    body:
      code: |
        # Python3 code to demonstrate working of
        # Replace duplicate Occurrence in String
        # Using split() + enumerate() + loop

        # initializing string
        test_str = 'Gfg is best . Gfg also has Classes now. \
        				Classes help understand better . '

        # printing original string
        print("The original string is : " + str(test_str))

        # initializing replace mapping
        repl_dict = {'Gfg' : 'It', 'Classes' : 'They' }

        # Replace duplicate Occurrence in String
        # Using split() + enumerate() + loop
        test_list = test_str.split(' ')
        res = set()
        for idx, ele in enumerate(test_list):
        	if ele in repl_dict:
        		if ele in res:
        			test_list[idx] = repl_dict[ele]
        		else:
        			res.add(ele)
        res = ' '.join(test_list)

        # printing result
        print("The string after replacing : " + str(res))
  - type: code
    language: cairo
    body:
      code: >-
        func find_element{range_check_ptr}(array_ptr: felt*, elm_size, n_elms,
        key) -> (elm_ptr: felt*) {
            alloc_locals;
            local index;
            %{
                ...
            %}
            assert_nn_le(a=index, b=n_elms - 1);
            tempvar elm_ptr = array_ptr + elm_size * index;
            assert [elm_ptr] = key;
            return (elm_ptr=elm_ptr);
        }
  - type: code
    language: cairo
    body:
      code: |-
        use starknet::syscalls::emit_event_syscall;

        let keys = ArrayTrait::new();
        keys.append('key');
        keys.append('deposit');
        let values = ArrayTrait::new();
        values.append(1);
        values.append(2);
        values.append(3);
        emit_event_syscall(keys, values).unwrap_syscall();
